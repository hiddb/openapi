openapi: 3.0.0
servers:
  - url: 'https://{service}.hiddb.io'
    description: Access to your HIDDB databases
    variables:
      service:
        default: api
        enum:
          - api
          - '{database_id}'
info:
  description: |
    This is the official API documentation for the HIDDB vector search database.

    In order to get started you will need to generate a API access key and secret token.
    Sign in into the your [dashboard](https://dashboard.hiddb.com/) and navigate to `API Access` / `Create API Key`.
    Make sure to copy the token because it won't be shown to you again.

    Now you can sign in your machine by requesting a temporary JSON Web Token (JWT) by performing a GET request to `hiddb.io/machine/login`.

    ```bash
    KEY="<key>"
    SECRET="<secret>"
    TOKEN=`\
    curl --location \
         --request POST "https://api.hiddb.io/machine/login" \
         --header "Content-Type: application/json" \
         --header "Accept: application/json" \
         --data-raw "{
             \"access_key\": \"$KEY\",
             \"secret_key\": \"$SECRET\"
         }" | python3 -c "import sys, json; print(json.load(sys.stdin)['access_token'])"`
    ```

    Once you have your API Token created, all API requests are authorized in the same way. 
    HIDDB uses the RFC standard `Authorization: Bearer <Token>` interface.
    When used in an example API request it looks like this:

    ```bash
    DATABASE_ID="<database_id>"
    curl --location \
         --request GET "https://${DATABASE_ID}.hiddb.io/collection" \
         --header "Accept: application/json" \
         --header "Authorization: Bearer $TOKEN"
    ```

    Congratulations your have now full and secure control over your personal HIDDB database.
  version: 0.2.3
  title: API documentation
  termsOfService: 'https:/hiddb.com/terms'
  license:
    name: Propretary Licence
    url: 'https://hiddb.com/licence'
tags:
  - name: Check health
    description: Check if you are all good
  - name: User Authentification
    description: User authentification
  - name: Machine Authentification
    description: Machine authentification
  - name: Database
    description: Operations on databases
  - name: Instance
    description: Operations on instances
  - name: Collection
    description: Operations on collections
  - name: Index
    description: Operations on indices
  - name: Document
    description: Operations on documents
paths:
  /user/register:
    post:
      x-internal: false
      x-hidden: true
      tags:
        - User Authentification
      summary: Register user
      description: Register user. Email containing URL with OTP is send out to user.
      responses:
        '200':
          description: successful operation
        default:
          $ref: '#/paths/~1health/get/responses/default'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
  /user/reset:
    post:
      x-internal: false
      x-hidden: true
      tags:
        - User Authentification
      summary: User password reset
      description: Send URL containing OTP to email adress provided by user to reset password.
      responses:
        '200':
          description: successful operation
        default:
          $ref: '#/paths/~1health/get/responses/default'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  format: email
  /user/update/verify:
    post:
      x-internal: false
      x-hidden: true
      tags:
        - User Authentification
      summary: Verify user's email
      description: Verify email adress provided by the user.
      responses:
        '200':
          description: successful operation
        default:
          $ref: '#/paths/~1health/get/responses/default'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - otp
              properties:
                user_id:
                  type: string
                  minLength: 18
                  maxLength: 18
                  pattern: '^[a-z0-9]{18,18}$'
                otp:
                  type: string
  /user/update/reset:
    post:
      x-internal: false
      x-hidden: true
      tags:
        - User Authentification
      summary: Update password
      description: Reset password as requested by the user.
      responses:
        '200':
          description: successful operation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - otp
                - password
              properties:
                user_id:
                  type: string
                otp:
                  type: string
                password:
                  type: string
                  format: password
  /user/login:
    post:
      x-internal: false
      x-hidden: false
      tags:
        - User Authentification
      description: User login using access and secret token.
      summary: User login
      operationId: userLogin
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - access_token
                  - type
                properties:
                  access_token:
                    type: string
                  type:
                    type: string
                    enum:
                      - Bearer
        default:
          $ref: '#/paths/~1health/get/responses/default'
      requestBody:
        description: Login email and password in exchange for JWT.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
  /user/logout:
    post:
      x-internal: false
      x-hidden: false
      tags:
        - User Authentification
      description: Log user out
      summary: Log out user
      responses:
        '200':
          description: successful operation
        default:
          $ref: '#/paths/~1health/get/responses/default'
  /user/refresh:
    post:
      tags:
        - User Authentification
      description: Refresh access token using cookie
      summary: Refresh JWT
      responses:
        '200':
          $ref: '#/paths/~1user~1login/post/responses/200'
        default:
          $ref: '#/paths/~1health/get/responses/default'
      requestBody:
        description: Exchange access and secret token for JSON web token (JWT).
        required: true
        content:
          application/json:
            schema:
              type: object
  /machine/login:
    post:
      x-internal: false
      x-hidden: false
      tags:
        - Machine Authentification
      description: Machine login using access and secret token.
      summary: Machine login
      operationId: machineLogin
      responses:
        '200':
          $ref: '#/paths/~1user~1login/post/responses/200'
        default:
          $ref: '#/paths/~1health/get/responses/default'
      requestBody:
        description: Exchange access and secret token for JSON web token (JWT).
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - access_key
                - secret_key
              properties:
                access_key:
                  type: string
                  minLength: 20
                  maxLength: 20
                secret_key:
                  type: string
                  minLength: 20
                  maxLength: 20
  /machine:
    post:
      tags:
        - Create Machine Account
      description: Create a new machine account.
      summary: New machine
      operationId: createMachine
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - machine_name
                  - id
                  - key
                  - secret
                  - permission
                properties:
                  machine_name:
                    type: string
                    minLength: 3
                    maxLength: 20
                  id:
                    type: string
                    minLength: 18
                    maxLength: 18
                  key:
                    type: string
                    minLength: 20
                    maxLength: 20
                  secret:
                    type: string
                    minLength: 20
                    maxLength: 20
                  permission:
                    type: string
                    enum:
                      - write
                      - read
                      - admin
        default:
          $ref: '#/paths/~1health/get/responses/default'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - machine_name
                - permission
              properties:
                machine_name:
                  type: string
                  minLength: 3
                  maxLength: 20
                permission:
                  type: string
                  enum:
                    - write
                    - read
                    - admin
    get:
      tags:
        - Machine Authentification
      description: Get all machines in organization
      summary: Get all machines
      operationId: getMachines
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  machines:
                    type: array
                    items:
                      type: object
                      required:
                        - machine_name
                        - id
                        - key
                        - permission
                      properties:
                        machine_name:
                          type: string
                          minLength: 3
                          maxLength: 20
                        id:
                          type: string
                          minLength: 18
                          maxLength: 18
                        key:
                          type: string
                          minLength: 20
                          maxLength: 20
                        permission:
                          type: string
                          enum:
                            - write
                            - read
                            - admin
        default:
          $ref: '#/paths/~1health/get/responses/default'
  '/machine/{machine_id}':
    parameters:
      - name: machine_id
        in: path
        description: The ID of the machine
        example: xxxxxxxxxxxxxxxxxx
        required: true
        schema:
          type: string
          minLength: 18
          maxLength: 18
          pattern: '^[a-z0-9]{18}$'
    delete:
      tags:
        - Machine Authentification
      description: Delete machine account
      summary: Delete machine account
      operationId: deleteMachine
      responses:
        '200':
          description: successful operation
        default:
          $ref: '#/paths/~1health/get/responses/default'
  /health:
    servers:
      - url: 'https://api.hiddb.io'
    get:
      tags:
        - Check health
      description: Check access to databases
      summary: Check health database
      responses:
        '200':
          description: successfull operation
          content:
            text/plain:
              schema:
                type: string
                default: Ok
                enum:
                  - Ok
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                required:
                  - error
                properties:
                  error:
                    type: string
  /database:
    get:
      tags:
        - Database
      description: Get information about databases
      summary: Get databases
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - databases
                properties:
                  databases:
                    type: array
                    items:
                      $ref: '#/paths/~1database~1%7Bdatabase_id%7D/get/responses/200/content/application~1json/schema'
        default:
          $ref: '#/paths/~1health/get/responses/default'
  '/database/{database_id}':
    parameters:
      - name: database_id
        in: path
        description: The ID of the database
        example: xxxxxxxxxxxxxxxxxx
        required: true
        schema:
          type: string
          minLength: 18
          maxLength: 18
          pattern: '^[a-z0-9]{18}$'
    get:
      tags:
        - Database
      description: Get information about specific database
      summary: Get database
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - database_name
                  - organization_id
                  - created_at
                  - deleted_at
                  - instances
                properties:
                  id:
                    type: string
                    minLength: 18
                    maxLength: 18
                    pattern: '^[a-z0-9]{18,18}$'
                  database_name:
                    type: string
                    minLength: 3
                    maxLength: 20
                    pattern: '^[a-z0-9_-]{3,20}$'
                  organization_id:
                    type: string
                    minLength: 18
                    maxLength: 18
                    pattern: '^[a-z0-9]{3,20}$'
                    example: xxxxxxxxxxxxxxxxxx
                  created_at:
                    type: string
                    format: date-time
                  deleted_at:
                    type: string
                    format: date-time
                    nullable: true
                  instances:
                    type: array
                    items:
                      $ref: '#/paths/~1instance/post/responses/202/content/application~1json/schema'
        default:
          $ref: '#/paths/~1health/get/responses/default'
    delete:
      tags:
        - Database
      description: Delete a specific database
      summary: Delete database
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/paths/~1database~1%7Bdatabase_id%7D/get/responses/200/content/application~1json/schema'
        default:
          $ref: '#/paths/~1health/get/responses/default'
  /instance:
    get:
      tags:
        - Instance
      description: Get information about instances
      summary: Get instances
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - instances
                properties:
                  instances:
                    type: array
                    items:
                      $ref: '#/paths/~1instance/post/responses/202/content/application~1json/schema'
        default:
          $ref: '#/paths/~1health/get/responses/default'
    post:
      tags:
        - Instance
      description: Create new instance
      summary: Create instance
      requestBody:
        description: Newly created Instance.
        content:
          application/json:
            schema:
              type: object
              required:
                - database_id
                - type
                - volume_size
              properties:
                database_id:
                  type: string
                  pattern: '^[a-z0-9]{18,18}$'
                  example: xxxxxxxxxxxxxxxxxx
                  minLength: 3
                type:
                  type: string
                  description: Instance type
                  default: s
                  example: s
                  enum:
                    - xs
                    - s
                    - m
                    - l
                    - xl
                volume_size:
                  type: number
                  description: Size of mounted and volume in gb
                  default: 10
                  example: 100
                  minimum: 10
                  maximum: 10000
                  multipleOf: 1
                location:
                  type: string
                  description: Physical instance location
                  enum:
                    - hel1
                    - nbg1
                    - fsn1
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - created_at
                  - deleted_at
                  - status
                  - type
                  - server
                  - volume_size
                properties:
                  id:
                    type: string
                    minLength: 18
                    maxLength: 18
                    pattern: '^[a-z0-9]{18,18}$'
                  created_at:
                    type: string
                    format: date-time
                  deleted_at:
                    type: string
                    format: date-time
                    nullable: true
                  status:
                    type: string
                    enum:
                      - awake
                      - provisioning
                      - wakingup
                      - asleep
                  type:
                    type: string
                    description: Instance type
                    default: s
                    example: s
                    enum:
                      - xs
                      - s
                      - m
                      - l
                      - xl
                  server:
                    type: object
                    nullable: true
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        minLength: 18
                        maxLength: 18
                        pattern: '^[a-z0-9]{18,18}$'
                  volume_size:
                    type: number
                    description: Size of mounted and volume in gb
                    default: 10
                    example: 100
                    minimum: 10
                    maximum: 10000
                    multipleOf: 1
                  location:
                    type: string
                    description: Physical instance location
                    enum:
                      - hel1
                      - nbg1
                      - fsn1
        default:
          $ref: '#/paths/~1health/get/responses/default'
  '/instance/{instance_id}':
    parameters:
      - name: instance_id
        in: path
        description: The ID of the instance
        example: xxxxxxxxxxxxxxxxxx
        required: true
        schema:
          type: string
          minLength: 18
          maxLength: 18
          pattern: '^[a-z0-9]{18}$'
    get:
      tags:
        - Instance
      description: Get information about specific instance
      summary: Get instance
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                  - created_at
                  - deleted_at
                  - status
                  - type
                  - server
                  - volume_size
                properties:
                  id:
                    type: string
                    minLength: 18
                    maxLength: 18
                    pattern: '^[a-z0-9]{18,18}$'
                  created_at:
                    type: string
                    format: date-time
                  deleted_at:
                    type: string
                    format: date-time
                    nullable: true
                  status:
                    type: string
                    enum:
                      - awake
                      - provisioning
                      - wakingup
                      - asleep
                  type:
                    type: string
                    description: Instance type
                    default: s
                    example: s
                    enum:
                      - xs
                      - s
                      - m
                      - l
                      - xl
                  server:
                    type: object
                    nullable: true
                    required:
                      - id
                    properties:
                      id:
                        type: string
                        minLength: 18
                        maxLength: 18
                        pattern: '^[a-z0-9]{18,18}$'
                  volume_size:
                    type: number
                    description: Size of mounted and volume in gb
                    default: 10
                    example: 100
                    minimum: 10
                    maximum: 10000
                    multipleOf: 1
                  location:
                    type: string
                    description: Physical instance location
                    enum:
                      - hel1
                      - nbg1
                      - fsn1
        default:
          $ref: '#/paths/~1health/get/responses/default'
    put:
      tags:
        - Instance
      description: Awake or put instance to sleep
      summary: 'Instance awake, sleep'
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - status
              properties:
                status:
                  type: string
                  enum:
                    - awake
                    - provisioning
                    - wakingup
                    - asleep
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/paths/~1instance/post/responses/202/content/application~1json/schema'
        default:
          $ref: '#/paths/~1health/get/responses/default'
    delete:
      tags:
        - Instance
      description: Delete a specific Instance
      summary: Delete instance
      responses:
        '202':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/paths/~1instance/post/responses/202/content/application~1json/schema'
        default:
          $ref: '#/paths/~1health/get/responses/default'
components:
  parameters:
    UserId:
      name: user_id
      in: path
      description: Your user ID. You can find your user ID in your dashboard
      example: xxxxxxxxxxxxxxxxxx
      required: true
      schema:
        type: string
        minLength: 18
        maxLength: 18
        pattern: '^[a-z0-9]{18}$'
    MachineId:
      name: machine_id
      in: path
      description: The ID of the machine
      example: xxxxxxxxxxxxxxxxxx
      required: true
      schema:
        type: string
        minLength: 18
        maxLength: 18
        pattern: '^[a-z0-9]{18}$'
    OrganizationId:
      name: organization_id
      in: path
      description: Your organization ID. You can find your organization ID in your dashboard
      example: xxxxxxxxxxxxxxxxxx
      required: true
      schema:
        type: string
        minLength: 18
        maxLength: 18
        pattern: '^[a-z0-9]{18}$'
  schemas:
    CollectionRequest:
      description: Collection details
      type: object
      required:
        - collection_name
      properties:
        collection_name:
          type: string
          minLength: 3
          maxLength: 20
          pattern: '^[a-z0-9_-]{3,20}$'
          example: xxxxxxxxxxxxxxxxxx
    CollectionsResponse:
      type: object
      required:
        - collections
      properties:
        collections:
          type: array
          items:
            $ref: '#/components/schemas/CollectionResponse'
    CollectionResponse:
      type: object
      required:
        - collection_name
      properties:
        collection_name:
          type: string
          minLength: 3
          maxLength: 20
          pattern: '^[a-z0-9_-]{3,20}$'
          example: xxxxxxxxxxxxxxxxxx
    IndexRequest:
      type: object
      required:
        - field_name
        - dimension
      properties:
        field_name:
          type: string
          minLength: 3
          maxLength: 20
          pattern: '^[a-z0-9_-]{3,20}$'
          example: xxxxxxxxxxxxxxxxxx
        dimension:
          type: integer
          format: int64
    DocumentRequest:
      additionalProperties: true
      required:
        - documents
      properties:
        documents:
          type: array
          items:
            type: object
            required:
              - id
            properties:
              id:
                type: string
                minLength: 3
                maxLength: 50
              field:
                type: array
                items:
                  type: number
                  format: double
                example:
                  - 1
                  - 2
                  - 3
    DocumentResponse:
      type: object
      additionalProperties: true
      required:
        - id
      properties:
        id:
          type: string
          minLength: 3
          maxLength: 50
        field:
          type: array
          items:
            type: number
            format: double
          example:
            - 1
            - 2
            - 3
    IndexResponse:
      type: object
      required:
        - collection_name
        - field_name
        - n_documents
        - distance_metric
        - dimension
      properties:
        collection_name:
          type: string
          minLength: 3
          maxLength: 20
          pattern: '^[a-z0-9_-]{3,20}$'
          example: xxxxxxxxxxxxxxxxxx
        field_name:
          type: string
          minLength: 3
          maxLength: 20
          pattern: '^[a-z0-9_-]{3,20}$'
          example: xxxxxxxxxxxxxxxxxx
        n_documents:
          type: integer
          format: int64
        distance_metric:
          type: string
          enum:
            - euclidean
        dimension:
          type: integer
          format: int64
    IndicesResponse:
      type: object
      required:
        - indices
      properties:
        indices:
          type: array
          items:
            $ref: '#/components/schemas/IndexResponse'
    SearchRequest:
      type: object
      required:
        - max_neighbors
        - field_name
      properties:
        ids:
          type: array
          items:
            type: string
          example:
            - document1
            - document2
            - document3
          description: Get documents close to the specified document. Provide either `ids` or `vectors`
        vectors:
          type: array
          items:
            type: array
            items:
              type: number
          example:
            - - 1
              - 2
              - 3
          description: Get documents close to the vector. The length of the vector must be equal to the dimension specified in the index
        max_neighbors:
          type: number
          default: 20
          minimum: 1
          description: Maximal number of neighbors to include in response
        field_name:
          type: string
          minLength: 3
          maxLength: 20
          pattern: '^[a-z0-9_-]{3,20}$'
          description: This parameter specifies the index to perform the query in
          example: xxxxxxxxxxxxxxxxxx
    SearchResponse:
      type: array
      items:
        type: object
        properties:
          data:
            type: array
            items:
              type: array
              items:
                type: string
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
  responses:
    defaultError:
      description: error
      content:
        application/json:
          schema:
            type: object
            properties:
              error:
                type: string
