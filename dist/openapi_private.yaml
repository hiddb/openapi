openapi: 3.0.0
servers:
  - url: https://{service}.hiddb.io
    description: Access to your HIDDB databases
    variables:
      service:
        default: api
        enum:
          - api
          - "{database_id}"
info:
  description: |
    This is the official API documentation for the HIDDB vector search database.

    In order to get started you will need to generate a API access key and secret token.
    Sign in into the your [dashboard](https://dashboard.hiddb.com/) and navigate to `API Access` / `Create API Key`.
    Make sure to copy the token because it won't be shown to you again.

    Now you can sign in your machine by requesting a temporary JSON Web Token (JWT) by performing a GET request to `hiddb.io/machine/login`.

    ```bash
    KEY="<key>"
    SECRET="<secret>"
    TOKEN=`\
    curl --location \
         --request POST "https://api.hiddb.io/machine/login" \
         --header "Content-Type: application/json" \
         --header "Accept: application/json" \
         --data-raw "{
             \"access_key\": \"$KEY\",
             \"secret_key\": \"$SECRET\"
         }" | python3 -c "import sys, json; print(json.load(sys.stdin)['access_token'])"`
    ```

    Once you have your API Token created, all API requests are authorized in the same way. 
    HIDDB uses the RFC standard `Authorization: Bearer <Token>` interface.
    When used in an example API request it looks like this:

    ```bash
    DATABASE_ID="<database_id>"
    curl --location \
         --request GET "https://${DATABASE_ID}.hiddb.io/collection" \
         --header "Accept: application/json" \
         --header "Authorization: Bearer $TOKEN"
    ```

    Congratulations your have now full and secure control over your personal HIDDB database.
  version: 0.2.3
  title: API documentation
  termsOfService: https:/hiddb.com/terms
  license:
    name: Propretary Licence
    url: https://hiddb.com/licence
tags:
  - name: Check health
    description: Check if you are all good
  - name: User Authentification
    description: User authentification
  - name: Machine Authentification
    description: Machine authentification
  - name: Database
    description: Operations on databases
  - name: Instance
    description: Operations on instances
  - name: Collection
    description: Operations on collections
  - name: Index
    description: Operations on indices
  - name: Document
    description: Operations on documents
  - name: Internal
    description: Internal operations
paths:
  /user/register:
    x-internal: true
    post:
      tags:
        - User Authentification
      summary: Register user
      description: Register user. Email containing URL with OTP is send out to user.
      responses:
        "200":
          description: successful operation
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              additionalProperties: false
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
  /user/reset:
    x-internal: true
    post:
      tags:
        - User Authentification
      summary: User password reset
      description: Send URL containing OTP to email adress provided by user to reset password.
      responses:
        "200":
          description: successful operation
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              additionalProperties: false
              properties:
                email:
                  type: string
                  format: email
  /user/update/verify:
    x-internal: true
    post:
      tags:
        - User Authentification
      summary: Verify user's email
      description: Verify email adress provided by the user.
      responses:
        "200":
          description: successful operation
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - otp
              additionalProperties: false
              properties:
                user_id:
                  type: string
                  minLength: 18
                  maxLength: 18
                  pattern: ^[a-z0-9]{18,18}$
                otp:
                  type: string
  /user/update/reset:
    x-internal: true
    post:
      tags:
        - User Authentification
      summary: Update password
      description: Reset password as requested by the user.
      responses:
        "200":
          description: successful operation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - user_id
                - otp
                - password
              additionalProperties: false
              properties:
                user_id:
                  type: string
                otp:
                  type: string
                password:
                  type: string
                  format: password
  /user/login:
    x-internal: true
    post:
      tags:
        - User Authentification
      description: User login using access and secret token.
      summary: User login
      operationId: userLogin
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  type:
                    type: string
                    enum:
                      - Bearer
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
      requestBody:
        description: Login email and password in exchange for JWT.
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              additionalProperties: false
              properties:
                email:
                  type: string
                  format: email
                password:
                  type: string
                  format: password
                stay_logged_in:
                  type: boolean
                  default: false
  /user/logout:
    x-internal: true
    post:
      tags:
        - User Authentification
      description: Log user out
      summary: Log out user
      responses:
        "200":
          description: successful operation
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
  /user/refresh:
    x-internal: true
    post:
      tags:
        - User Authentification
      description: Refresh access token using cookie
      summary: Refresh JWT
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                properties:
                  access_token:
                    type: string
                  type:
                    type: string
                    enum:
                      - Bearer
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
      requestBody:
        description: Exchange access and secret token for JSON web token (JWT).
        required: true
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
  /health:
    x-internal: true
    servers:
      - url: https://api.hiddb.io
    get:
      tags:
        - Check health
      description: Check access to databases
      summary: Check health database
      responses:
        "200":
          description: successfull operation
          content:
            text/plain:
              schema:
                type: string
                default: Ok
                enum:
                  - Ok
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
  "/organization/{organization_id}/usage":
    x-internal: true
    servers:
      - url: INSTANCE_MANATEMENT_URL
        description: instance management microservice
    get:
      tags:
        - Internal
      description: Get usage of organization
      summary: Get usage
      parameters:
        - name: organization_id
          in: path
          description: The ID of the organization
          example: xxxxxxxxxxxxxxxxxx
          required: true
          schema:
            type: string
            minLength: 18
            maxLength: 18
            pattern: ^[a-z0-9]{18,18}$
        - name: from
          in: query
          description: from
          required: true
          schema:
            type: string
            format: date-time
        - name: to
          in: query
          description: to
          required: true
          schema:
            type: string
            format: date-time
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                description: JSON containing the usage per organization
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
  /customer/address:
    x-internal: true
    get:
      tags:
        - Internal
      description: Get customer billing information
      summary: Get customer information
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - name
                  - city
                  - country
                  - line1
                  - line2
                  - postal_code
                  - state
                properties:
                  name:
                    type: string
                    description: First and last name or company name
                    maxLength: 50
                  city:
                    type: string
                    description: Two-letter country code (ISO 3166-1 alpha-2)
                    maxLength: 50
                  country:
                    type: string
                    maxLength: 50
                  line1:
                    type: string
                    maxLength: 50
                  line2:
                    type: string
                    maxLength: 50
                  postal_code:
                    type: string
                    maxLength: 25
                  state:
                    type: string
                    maxLength: 50
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
    put:
      tags:
        - Internal
      description: Update customer billing information
      summary: Update customer information
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
              required:
                - name
                - city
                - country
                - line1
                - line2
                - postal_code
                - state
              properties:
                name:
                  type: string
                  description: First and last name or company name
                  maxLength: 50
                city:
                  type: string
                  description: Two-letter country code (ISO 3166-1 alpha-2)
                  maxLength: 50
                country:
                  type: string
                  maxLength: 50
                line1:
                  type: string
                  maxLength: 50
                line2:
                  type: string
                  maxLength: 50
                postal_code:
                  type: string
                  maxLength: 25
                state:
                  type: string
                  maxLength: 50
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - name
                  - city
                  - country
                  - line1
                  - line2
                  - postal_code
                  - state
                properties:
                  name:
                    type: string
                    description: First and last name or company name
                    maxLength: 50
                  city:
                    type: string
                    description: Two-letter country code (ISO 3166-1 alpha-2)
                    maxLength: 50
                  country:
                    type: string
                    maxLength: 50
                  line1:
                    type: string
                    maxLength: 50
                  line2:
                    type: string
                    maxLength: 50
                  postal_code:
                    type: string
                    maxLength: 25
                  state:
                    type: string
                    maxLength: 50
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
  /customer/checkout:
    x-internal: true
    post:
      tags:
        - Internal
      description: Create new checkout session for registered customer
      summary: Stripe Checkout
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - checkoutUrl
                properties:
                  checkoutUrl:
                    type: string
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
  /customer/portal:
    x-internal: true
    post:
      tags:
        - Internal
      description: Create new customer portal session for registered customer
      summary: Stripe Customer Portal
      requestBody:
        content:
          application/json:
            schema:
              type: object
              additionalProperties: false
      responses:
        "200":
          description: successful operation
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                required:
                  - checkoutUrl
                properties:
                  checkoutUrl:
                    type: string
        default:
          description: error
          content:
            application/json:
              schema:
                type: object
                additionalProperties: false
                properties:
                  error:
                    type: string
