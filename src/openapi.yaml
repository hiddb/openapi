openapi: 3.0.0
servers:
  - url: https://{service}.hiddb.io
    description: Access to your HIDDB databases
    variables:
      service:
        default: api
        enum:
          - "api"
          - "{database_id}"

info:
  description: |
    This is the official API documentation for the HIDDB vector search database.

    In order to get started you will need to generate a API access key and secret token.
    Sign in into the your [dashboard](https://dashboard.hiddb.com/) and navigate to `API Access` / `Create API Key`.
    Make sure to copy the token because it won't be shown to you again.

    Now you can sign in your machine by requesting a temporary JSON Web Token (JWT) by performing a GET request to `hiddb.io/machine/login`.
  
    ```bash
    KEY="<key>"
    SECRET="<secret>"
    TOKEN=`\
    curl --location \
         --request POST "https://api.hiddb.io/machine/login" \
         --header "Content-Type: application/json" \
         --header "Accept: application/json" \
         --data-raw "{
             \"access_key\": \"$KEY\",
             \"secret_key\": \"$SECRET\"
         }" | python3 -c "import sys, json; print(json.load(sys.stdin)['access_token'])"`
    ```

    Once you have your API Token created, all API requests are authorized in the same way. 
    HIDDB uses the RFC standard `Authorization: Bearer <Token>` interface.
    When used in an example API request it looks like this:

    ```bash
    DATABASE_ID="<database_id>"
    curl --location \
         --request GET "https://${DATABASE_ID}.hiddb.io/collection" \
         --header "Accept: application/json" \
         --header "Authorization: Bearer $TOKEN"
    ```

    Congratulations your have now full and secure control over your personal HIDDB database.

  version: 0.2.3
  title: API documentation
  termsOfService: "https:/hiddb.com/terms"
  license:
    name: Propretary Licence
    url: "https://hiddb.com/licence"
tags:
  - name: Check health
    description: Check if you are all good
  - name: User Authentification
    description: User authentification
  - name: Machine Authentification
    description: Machine authentification
  - name: Database
    description: Operations on databases
  - name: Instance
    description: Operations on instances
  - name: Collection
    description: Operations on collections
  - name: Index
    description: Operations on indices
  - name: Document
    description: Operations on documents

paths:
  ############################## User Authentification ######################################

  /user/register:
    $ref: "./user/register.yaml" 

  /user/reset:
    $ref: "./user/reset.yaml" 

  /user/update/verify:
    $ref: "./user/update/verify.yaml" 

  /user/update/reset:
    $ref: "./user/update/reset.yaml" 

  /user/login:
    $ref: "./user/login.yaml" 

  /user/logout:
    $ref: "./user/logout.yaml" 

  /user/refresh:
    $ref: "./user/refresh.yaml" 

  ############################## Machine Authentification ######################################

  /machine/login:
    $ref: "./machine/login.yaml" 

  /machine:
    $ref: "./machine/index.yaml" 

  /machine/{machine_id}:
    $ref: "./machine/machine_id/index.yaml"

  ############################## Check connection ######################################

  /health:
    $ref: "./health/index.yaml"

  ############################## Databases #############################################

  /database:
    $ref: "./database/index.yaml"

  /database/{database_id}:
    $ref: "./database/database_id/index.yaml"

  # ############################## Instances #############################################

  /instance:
    $ref: "./instance/index.yaml"

  /instance/{instance_id}:
    $ref: "./instance/instance_id/index.yaml"

  ############################## Collection #############################################

  /collection:
    $ref: "./collection/index.yaml"

  /collection/{collection_name}:
    $ref: "./collection/collection_name/index.yaml"

  # ############################## Index ##################################################

  /collection/{collection_name}/index:
    $ref: "./collection/collection_name/index/index.yaml"

  /collection/{collection_name}/index/{field_name}:
    $ref: "./collection/collection_name/index/field_name/index.yaml"

  # ############################## Document ###############################################

  /collection/{collection_name}/document:
    $ref: "./collection/collection_name/index/document.yaml"

  /collection/{collection_name}/document/search:
    $ref: "./collection/collection_name/index/search.yaml"

  /collection/{collection_name}/document/{document_id}:
    $ref: "./collection/collection_name/document/document_id/index.yaml"